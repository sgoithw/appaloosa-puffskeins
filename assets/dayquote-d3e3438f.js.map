{"version":3,"file":"dayquote-d3e3438f.js","sources":["../../src/js/favouritesManager.js","../../src/img/icons.svg","../../src/js/ui.js","../../src/js/header.js","../../src/js/api.js","../../src/js/modal.js","../../src/js/dayquote.js"],"sourcesContent":["class FavouritesManager {\n  /**\n   * FavouritesManager's constructor.\n   * initializing new instance with provided parameters.\n   */\n  constructor() {\n    this.favouritesKey = 'favouriteExercises';\n  }\n\n  /**\n   * add exersice to favourites.\n   * @param {object} exercise - exersice object with all parameters.\n   */\n  addExerciseToFavorites(exercise) {\n    const favourites = this.getFavorites();\n    favourites.push(exercise);\n    localStorage.setItem(this.favouritesKey, JSON.stringify(favourites));\n  }\n\n  /**\n   * remove exercise from favourites using its ID\n   * @param {string} exerciseId - exersice ID.\n   */\n  removeExerciseFromFavorites(exerciseId) {\n    let favourites = this.getFavorites();\n    favourites = favourites.filter(exercise => exercise._id !== exerciseId);\n    localStorage.setItem(this.favouritesKey, JSON.stringify(favourites));\n  }\n\n  /**\n   * returns currents list of favourites from localStorage.\n   * @returns {Array} - array of exercises's objects.\n   */\n  getFavorites() {\n    const favouritesJSON = localStorage.getItem(this.favouritesKey);\n    return favouritesJSON ? JSON.parse(favouritesJSON) : [];\n  }\n\n  /**\n   * checks if this particular exersice with this ID in favourites.\n   * @param {string} exerciseId - exersice ID.\n   * @returns {boolean} - true, exersice is in favourites, if not false.\n   */\n  isFavorite(exerciseId) {\n    const favourites = this.getFavorites();\n    return favourites.some(exercise => exercise._id === exerciseId);\n  }\n}\n\n// exporting class FavouritesManager.\nexport const favouritesManager = new FavouritesManager();\n","export default \"__VITE_ASSET__aafb9193__\"","import icons from '../img/icons.svg';\n/**\n * ...\n */\nclass PopupUI {\n  /**\n   * Returns exercise details\n   * html string\n   *\n   * @param exercise\n   */\n  getExerciseDetailsHTML({\n    _id,\n    bodyPart,\n    equipment,\n    gifUrl,\n    name,\n    target,\n    description,\n    rating,\n    burnedCalories,\n    time,\n    popularity,\n    isFavorite,\n  }) {\n    return `\n  <div class='exercises-modal' data-id='${_id}'>\n  <div class='exercises-container'\">\n    <div class='exercises-modal-left'>\n      <img class='exercises-modal-image'\n      ${\n        gifUrl\n          ? `src=${gifUrl}`\n          : `srcset = '../img/modal-exercise-image.jpg 1x,../img/modal-exercise-image@2x.jpg 2x' src = '../img/modal-exercise-image.jpg'`\n      }\n      alt='exercise for body-part'  />\n    </div>\n\n    <div class='exercises-modal-right'>\n      <button class='exercises-modal-close modal-closed-btn'>\n            <svg width='24' height='24'>\n                <use href='${icons}#icon-close-x'></use>\n            </svg>\n      </button>\n\n      <h3 class='exercises-modal-title'>${name}</h3>\n\n      <div class='exercises-modal-rating-container'>\n        <span class='exercises-modal-rating-value'>${rating}</span>\n        <fieldset class='exercises-modal-rating'>\n          <input\n            class='exercises-modal-rating-input'\n            type='radio'\n            id='star1'\n            name='rating'\n          />\n          <label class='exercises-modal-rating-label' for='star1'>\n            <svg\n            class='exercises-modal-favorite-icon rating-star ${\n              rating >= 1 ? 'rated' : ''\n            }'\n            width='20'\n            height='20'\n            viewBox='0 0 32 32'\n          >\n            <use href='${icons}#icon-star'></use>\n          </svg>\n          </label>\n          <input\n            class='exercises-modal-rating-input'\n            type='radio'\n            id='star2'\n            name='rating'\n          />\n          <label class='exercises-modal-rating-label' for='star2'>\n            <svg\n            class='exercises-modal-favorite-icon rating-star ${\n              rating >= 2 ? 'rated' : ''\n            }'\n            width='20'\n            height='20'\n            viewBox='0 0 32 32'\n          >\n            <use href='${icons}#icon-star'></use>\n          </svg>\n          </label>\n          <input\n            class='exercises-modal-rating-input'\n            type='radio'\n            id='star3'\n            name='rating'\n          />\n          <label class='exercises-modal-rating-label' for='star3'>\n            <svg\n            class='exercises-modal-favorite-icon rating-star ${\n              rating >= 3 ? 'rated' : ''\n            }'\n            width='20'\n            height='20'\n            viewBox='0 0 32 32'\n          >\n            <use href='${icons}#icon-star'></use>\n          </svg>\n          </label>\n          <input\n            class='exercises-modal-rating-input'\n            type='radio'\n            id='star4'\n            name='rating'\n          />\n          <label class='exercises-modal-rating-label' for='star4'>\n            <svg\n            class='exercises-modal-favorite-icon rating-star ${\n              rating >= 4 ? 'rated' : ''\n            }'\n            width='20'\n            height='20'\n            viewBox='0 0 32 32'\n          >\n            <use href='${icons}#icon-star'></use>\n          </svg>\n          </label>\n          <input\n            class='exercises-modal-rating-input'\n            type='radio'\n            id='star5'\n            name='rating'\n          />\n          <label class='exercises-modal-rating-label' for='star5'>\n            <svg\n            class='exercises-modal-favorite-icon rating-star ${\n              rating >= 5 ? 'rated' : ''\n            }'\n            width='20'\n            height='20'\n            viewBox='0 0 32 32'\n          >\n            <use href='${icons}#icon-star'></use>\n          </svg>\n          </label>\n        </fieldset>\n      </div>\n\n      <hr class='exercises-modal-line' />\n\n      <ul class='excercises-modal-list'>\n        <li class='excercises-modal-item'>\n          <h4 class='excercises-modal-title'>Taget</h4>\n          <p class='excercises-modal-aftertitle js-target'>${target}</p>\n        </li>\n        <li class='excercises-modal-item'>\n          <h4 class='excercises-modal-title'>Body Part</h4>\n          <p class='excercises-modal-aftertitle js-body-part'>${bodyPart}</p>\n        </li>\n        <li class='excercises-modal-item'>\n          <h4 class='excercises-modal-title'>Equipment</h4>\n          <p class='excercises-modal-aftertitle js-equipment'>${equipment}</p>\n        </li>\n        <li class='excercises-modal-item'>\n          <h4 class='excercises-modal-title'>Popular</h4>\n          <p class='excercises-modal-aftertitle js-popularity'>${popularity}</p>\n        </li>\n        <li class='excercises-modal-item'>\n          <h4 class='excercises-modal-title'>Burned calories</h4>\n          <p class='excercises-modal-aftertitle js-burned-calories'>${burnedCalories}/${time}</p>\n        </li>\n        <li class='excercises-modal-item'>\n          <h4 class='excercises-modal-title'></h4>\n          <p class='excercises-modal-aftertitle js-burned-calories'></p>\n        </li>\n      </ul>\n\n      <hr class='exercises-modal-line-second' />\n\n      <p class='exercises-modal-description'>${description}</p>\n\n\n    </div>\n    </div>\n        <div class='exercises-modal-buttons'>\n        <button class='exercises-modal-favorite-btn' data-id='${_id}'>\n          Add to favorites\n          <svg\n            class='exercises-modal-favorite-icon'\n            width='20'\n            height='20'\n            viewBox='0 0 32 32'\n          >\n            <use href='${icons}#icon-heart'></use>\n          </svg>\n        </button>\n<!--        <button class=\"exercises-modal-rating-btn\">Give a rating</button>-->\n      </div>\n  </div>\n`;\n  }\n}\n\nexport class ExerciseUI {\n  /**\n   * * Type of exercise card.\n   * Different features may be added to a card with different type.\n   *\n   * Ad hoc Enum use:\n   * Object.freeze - freezes the object and makes it Read-Only (writes will cause an error).\n   * Symbol() - makes each item unique.\n   */\n  static exerciseCardType = Object.freeze({\n    HOME: 'HOME',\n    FAVORITES: 'FAVORITES',\n  });\n\n  /**\n   * * Creates markup of the exercise cards list items of a specific exercise card type.\n   * Depending on card type, adds additional card feature (rating | move to trash button).\n   * @param {object[]} arr Array of exercise card objects of a specific 'exerciseCardType' type.\n   * @param {string (ExerciseUI.exerciseCardType)} cardType On of the exercise card types.\n   * @returns {string} Exercise card list HTML representation.\n   */\n  getExerciseListHTML(arr, cardType) {\n    if (!ExerciseUI.exerciseCardType[cardType]) {\n      console.error(\n        `Unsupported exercise card type \\'${cardType}\\' when trying to create exercise card.`\n      );\n      return '';\n    }\n\n    let featureMarkup;\n\n    if (cardType === ExerciseUI.exerciseCardType.FAVORITES) {\n      featureMarkup = `\n        <button class='js-remove move-to-trash-btn' type='button'>\n        <svg class='move-to-trash-icon' width='16' height='16'>\n              <use href='${icons}#icon-trash'></use>\n            </svg>\n          </button>`;\n    }\n\n    return arr\n      .map(el => {\n        if (cardType === ExerciseUI.exerciseCardType.HOME) {\n          featureMarkup = `\n        <div class='rating'>\n        <span class='rating-value'>${el.rating}</span>\n        <svg class='rating-icon' width='18' height='18'>\n        <use href='${icons}#icon-star'></use>\n        </svg>\n        </div>`;\n        }\n\n        return `\n      <li class='exercise' data-exercise-id='${el._id}'>\n        <button class='main-action-btn card__btn' data-id='${\n          el._id\n        }' type='button'>\n          Start\n          <svg class='main-action-arrow-icon' width='16' height='16'>\n            <use href='${icons}#icon-arrow-right'></use>\n          </svg>\n        </button>\n        <div class='top'>\n          <span class='badge'>Workout</span>\n          ${featureMarkup}\n        </div>\n        <div class='title'>\n          <svg class='title-icon' width='14' height='16'>\n            <use href='${icons}#icon-running-stick-figure-svgrepo-com-1'></use>\n          </svg>\n          <span class='title-text text-clipped'>${\n            el.name.charAt(0).toUpperCase() + el.name.slice(1)\n          }</span>\n        </div>\n        <div class='details'>\n          <div class='detail'>\n            <span class='detail-title'>Burned calories:</span>\n            <span class='detail-value text-clipped'>${el.burnedCalories} / ${\n          el.time\n        } min</span>\n          </div>\n          <div class='detail'>\n            <span class='detail-title'>Body part:</span>\n            <span class='detail-value text-clipped'>${el.bodyPart}</span>\n          </div>\n          <div class='detail'>\n            <span class='detail-title'>Target:</span>\n            <span class='detail-value text-clipped'>${el.target}</span>\n          </div>\n        </div>\n      </li>`;\n      })\n      .join('');\n  }\n\n  getExerciseCategoryListHTML(exercises) {\n    return exercises\n      .map(\n        ({ filter, name, imgURL }) => `\n              <li class='exs-card-item' data-name='${name}'>\n                  <img class='exs-card-img' src='${imgURL}' alt='${name}' />\n                      <div class='exs-card-container'>\n                          <h3 class='exs-card-title'>${name}</h3>\n                          <p class='exs-card-description'>${filter}</p>\n                      </div>\n                  </li>`\n      )\n      .join('');\n  }\n\n  getPaginationHTML(totalPages, page = 1, perPage = 9) {\n    let paginationHTML = '';\n    if (totalPages < 1) {\n      return paginationHTML;\n    }\n\n    let toNumber = e => {\n      e = parseInt(e);\n      return isNaN(e) ? 0 : e;\n    };\n    totalPages = toNumber(totalPages);\n    page = toNumber(page);\n    perPage = toNumber(perPage);\n    const paginationData = this.#makePaginationData(totalPages, page, perPage);\n\n\n    if (totalPages > 5) {\n      if (page > 1) {\n        paginationHTML += `\n          <li class='exs-pagination-item circle'>\n            <a class='exs-pagination-link ' data-page='1'>\n              <svg class='icon-pagination-arrow' width='32' height='32'>\n                <use href='${icons}#icon-double-arrow-left'></use>\n              </svg>\n            </a>\n          </li>\n          <li class='exs-pagination-item circle'>\n            <a class='exs-pagination-link ' data-page='${page - 1} '>\n              <svg class='icon-pagination-arrow' width='20' height='20'>\n                <use href='${icons}#icon-fi-rr-angle-small-left'></use>\n              </svg>\n            </a>\n          </li>`;\n      }\n    }\n\n    paginationData.pages.forEach(page => {\n      paginationHTML += `<li class='exs-pagination-item ${\n        paginationData.page == page ? 'active' : ''\n      }'><a class='exs-pagination-link' ${\n        page !== '...' ? `data-page=\"${page}\"` : ''\n      }>${page}</a></li>`;\n    });\n\n    if (totalPages > 5) {\n      if (page < totalPages) {\n        paginationHTML += `\n          <li class='exs-pagination-item circle'>\n          <a class='exs-pagination-link ' data-page='${page + 1} '>\n            <svg class='icon-pagination-arrow' width='20' height='20'>\n              <use href='${icons}#icon-fi-rr-angle-small-right'></use>\n            </svg>\n            </a>\n        </li>\n        <li class='exs-pagination-item circle'>\n          <a class='exs-pagination-link ' data-page='${totalPages}'>\n            <svg class='icon-pagination-arrow' width='32' height='32'>\n              <use href='${icons}#icon-double-arrow-right'></use>\n            </svg>\n          </a>\n        </li>`;\n      }\n    }\n    return paginationHTML;\n  }\n\n  /**\n   * Returns object with pagination data.\n   *\n   * @param maxPage\n   * @param page\n   * @param perPage\n   * @returns {{pages: *, nextPage: *, prevPage: number, page: (*|number), maxPage: *}}\n   */\n  #makePaginationData(maxPage, page = 1, perPage = 9) {\n    maxPage = maxPage > 1 ? maxPage : 1;\n\n    let pagesArr = [];\n\n    if (maxPage > 4) {\n      pagesArr = [\n        page === 1 ? 1 : page < maxPage - 2 ? page - 1 : maxPage - 4,\n        page < maxPage - 2 ? (page === 1 ? 2 : page) : maxPage - 3,\n        page < maxPage - 2 ? (page === 1 ? 3 : page + 1) : maxPage - 2,\n        page < maxPage - 3 ? '...' : maxPage - 1,\n        maxPage,\n      ];\n    } else {\n      for (let i = 1; i <= maxPage; i++) {\n        pagesArr.push(i);\n      }\n    }\n\n    return {\n      pages: pagesArr,\n      page: page <= maxPage ? page : 1,\n      maxPage: maxPage,\n      nextPage: page < maxPage ? page + 1 : maxPage,\n      prevPage: page > 1 ? page - 1 : 1,\n    };\n  }\n}\n\nexport const exerciseUI = new ExerciseUI();\nexport const popupUI = new PopupUI();\n","function setupMobileMenu() {\n  const mobileMenu = document.querySelector('.js-menu-container');\n  const openMenuBtn = document.querySelector('.js-open-menu');\n  const closeMenuBtn = document.querySelector('.js-close-menu');\n  const body = document.body;\n\n  const toggleMenu = () => {\n    const isMenuOpen =\n      openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n    openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n\n    mobileMenu.classList.toggle('is-open');\n    body.classList.toggle('menu-open');\n\n    if (body.classList.contains('menu-open')) {\n      disableScroll();\n    } else {\n      enableScroll();\n    }\n  };\n\n  const closeMenu = () => {\n    mobileMenu.classList.remove('is-open');\n    openMenuBtn.setAttribute('aria-expanded', false);\n    body.classList.remove('menu-open');\n    enableScroll();\n  };\n\n  const disableScroll = () => {\n    body.style.overflow = 'hidden';\n  };\n\n  const enableScroll = () => {\n    body.style.overflow = 'visible';\n  };\n\n  openMenuBtn.addEventListener('click', toggleMenu);\n  closeMenuBtn.addEventListener('click', toggleMenu);\n  body.addEventListener('click', event => {\n    if (\n      event.target.closest('.js-menu-container') ||\n      event.target.closest('.js-open-menu')\n    ) {\n      return;\n    }\n    if (mobileMenu.classList.contains('is-open')) {\n      closeMenu();\n    }\n  });\n\n  window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n    if (!e.matches) return;\n    closeMenu();\n  });\n}\n\nfunction buildMenu() {\n  const currentPageUrl = window.location.pathname;\n\n  const menuItems = [\n    { label: 'Home', href: '/', activeOn: '/index.html' },\n    { label: 'Favorites', href: 'favorites.html', activeOn: 'favorites.html' },\n  ];\n\n  const menu = document.createElement('ul');\n  menu.classList.add('header-pages');\n\n  for (const item of menuItems) {\n    const listItem = document.createElement('li');\n    listItem.classList.add('header-pages-item');\n\n    if (\n      currentPageUrl === item.activeOn ||\n      currentPageUrl === item.href ||\n      currentPageUrl.endsWith(item.activeOn)\n    ) {\n      listItem.classList.add('header-pages-active');\n      listItem.textContent = item.label;\n    } else {\n      listItem.classList.add('header-inactive');\n      const link = document.createElement('a');\n      link.classList.add('header-item-link');\n      link.href = item.href;\n      link.textContent = item.label;\n      listItem.appendChild(link);\n    }\n\n    menu.appendChild(listItem);\n  }\n\n  // document.querySelector('#header-pages').appendChild(menu);\n\n  let element = document.querySelector('#header-pages');\n  element.replaceChild(menu, element.querySelectorAll('ul')[0]);\n  element = document.querySelector('#header-pages');\n}\n\nwindow.onload = buildMenu;\nsetupMobileMenu();\n","const BASE_URL = 'https://your-energy.b.goit.study';\n\nclass YourEnergyAPI {\n  // Private field to store the base URL\n  #baseUrl = '';\n\n  /**\n   * Constructor to initialize the base URL\n   * @param {string} baseUrl  - The base url for the API.\n   */\n  constructor(baseUrl) {\n    this.#baseUrl = baseUrl;\n  }\n\n  /**\n   * Method to fetch filters from the API\n   * All filters. This endpoint returns all the filters available for the exercise search.\n   * @param {Object} query - The parameters for the exercise search.\n   * @param {string} query.filter - The filter to apply to the search.\n   * @param {number} query.page - The page number of the results to return.\n   * @param {number} query.limit - The number of exercises to return.\n   * @returns\n   */\n  filters(query) {\n    // Convert query parameters to URL search params\n    const parameters = new URLSearchParams(query);\n    // Fetch filters using the constructed URL\n    return fetch(`${this.#baseUrl}/api/filters?${parameters}`).then(\n      response => {\n        if (response.ok) {\n          return response.json(); // Parse response as JSON if successful\n        }\n        throw new Error('Error fetching filters'); // Throw error if request fails\n      },\n    );\n  }\n\n  /**\n   * Method to fetch exercises from the API\n   * All exercises. This endpoint returns all the exercises available for the provided.\n   * @param {Object} query - The parameters for the exercise search.\n   * @param {string} query.bodypart - The filter that is applied to the search.\n   * @param {string} query.muscles - The filter that is applied to the search.\n   * @param {string} query.equipment - The filter that is applied to the search.\n   * @param {string} query.keyword - The keyword for search by exercise name.\n   * @param {number} query.page - The page number of the results to return.\n   * @param {number} query.limit - The number of exercises to return.\n   * @returns\n   */\n  exercises(query) {\n    const parameters = new URLSearchParams(query);\n    return fetch(`${this.#baseUrl}/api/exercises?${parameters}`).then(\n      response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Error fetching exercises');\n      },\n    );\n  }\n\n  /**\n   * Method to fetch quotes from the API. No paramentrs are required\n   * @returns {Promise<Response>}\n   */\n  quotes() {\n    return fetch(`${this.#baseUrl}/api/quote`).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw new Error('Error fetching qoute');\n    });\n  }\n\n  /**\n   * Returns exercise data\n   * @param {string} id - Exercise ID.\n   */\n  getExerciseById(id) {\n    return fetch(`${this.#baseUrl}/api/exercises/${id}`).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw new Error('Error fetching exercise by ID');\n    });\n  }\n\n  /**\n   * Method to patch (update) the rating of an exercise\n   * @param id - qery parameter -exersice ID\n   * @param data - object containing rate, email and rewiev\n   * @returns {Promise<Response>}\n   */\n  patchRating(id, data) {\n    return fetch(`${this.#baseUrl}/api/exercises/${id}/rating`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw new Error('Error patching rating');\n    });\n  }\n\n  /**\n   * Method to create a subscription\n   * @param data - object that contains email\n   * @returns {Promise<Response>}\n   */\n  createSubscription(data) {\n    return fetch(`${this.#baseUrl}/api/subscription`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      switch (response.status) {\n        case 409:\n          throw new Error('Email has been already subscribed');\n          break;\n        default:\n          throw new Error('Error creating subscription');\n          break;\n      }\n    });\n  }\n\n}\n\n// Export an instance of YourEnergyAPI initialized with the base URL\nexport const api = new YourEnergyAPI(BASE_URL);\n","import { api } from './api';\nimport { favouritesManager } from './favouritesManager.js';\nimport { popupUI } from './ui.js';\nimport icons from '../img/icons.svg';\n\nlet isFavorite = false;\nlet idFavorite;\nlet currentExercise = null;\n\nconst modalExercises = document.querySelector('.exercises-popup');\nconst overlay = document.querySelector('.overlay');\n\nconst listItem = document.querySelector('.exercises-cards-list');\n\nlistItem.addEventListener('click', onExercisesCardClick);\n\nasync function onExercisesCardClick(event) {\n  if (!event.target.closest('.card__btn')) {\n    return;\n  }\n\n  try {\n    const exerciseID = event.target\n      .closest('.card__btn')\n      .getAttribute('data-id');\n\n    // dummy ID\n    // const exerciseID = '64f389465ae26083f39b17a2';\n\n    const exerciseData = await api.getExerciseById(exerciseID);\n    currentExercise = exerciseData;\n    idFavorite = exerciseID;\n\n    const markup = popupUI.getExerciseDetailsHTML(exerciseData);\n\n    updateModal(markup, exerciseData);\n    openModalExercises();\n\n    const btnModalFavorites = document.querySelector(\n      '.exercises-modal-favorite-btn',\n    );\n    btnModalFavorites.addEventListener('click', toggleBtn);\n    const btnModalClose = document.querySelector('.modal-closed-btn');\n    btnModalClose.addEventListener('click', closeModalExercises);\n  } catch (error) {\n    throw new Error(\n      'An error occurred during the download. Please try again later.',\n    );\n  }\n}\n\nfunction openModalExercises() {\n  const lockPaddingValue = window.innerWidth - document.body.offsetWidth + 'px';\n\n  modalExercises.classList.remove('hidden');\n  overlay.classList.remove('hidden');\n  document.body.style.paddingRight = lockPaddingValue;\n  document.body.style.overflow = 'hidden';\n}\n\nfunction updateModal(markup, exerciseData) {\n  modalExercises.innerHTML = markup;\n  toggleFavorites(exerciseData);\n}\n\nfunction toggleFavorites(exerciseData) {\n  const btnModalFavorites = document.querySelector(\n    '.exercises-modal-favorite-btn',\n  );\n\n  isFavorite = favouritesManager.isFavorite(exerciseData._id);\n\n  if (isFavorite) {\n    btnModalFavorites.innerHTML = createRemoveFromFavoritesMarkup();\n  } else {\n    btnModalFavorites.innerHTML = createAddToFavoritesMarkup();\n  }\n}\n\nfunction toggleBtn() {\n  isFavorite = !favouritesManager.isFavorite(currentExercise._id);\n  const btnModalFavorites = document.querySelector(\n    '.exercises-modal-favorite-btn',\n  );\n\n  const localFavorite = document.querySelector('.fav-list');\n\n  if (isFavorite) {\n    btnModalFavorites.innerHTML = createRemoveFromFavoritesMarkup();\n    favouritesManager.addExerciseToFavorites(currentExercise);\n    hideExerciseCard(currentExercise._id);\n    // localFavorite == null\n    //   ? console.log('')\n    //   : setTimeout(() => {\n    //       createMarkupFavorite();\n    //     }, 100);\n  } else {\n    btnModalFavorites.innerHTML = createAddToFavoritesMarkup();\n    favouritesManager.removeExerciseFromFavorites(currentExercise._id);\n    showExerciseCard(currentExercise._id);\n    // localFavorite == null\n    //   ? console.log('')\n    //   : setTimeout(() => {\n    //       createMarkupFavorite();\n    //     }, 100);\n  }\n}\n\nfunction showExerciseCard(id) {\n  const card = [...document.querySelectorAll(`.fav-list .exercise`)].filter(e => e.dataset.exerciseId == id);\n  if (!card || card.length === 0) {\n    return;\n  }\n\n  card[0].classList.add('hidden');\n}\n\nfunction hideExerciseCard(id) {\n  const card = [...document.querySelectorAll(`.fav-list .exercise`)].filter(e => e.dataset.exerciseId == id);\n\n  if (!card || card.length === 0) {\n    return;\n  }\n\n  card[0].classList.remove('hidden');\n}\n\nfunction createAddToFavoritesMarkup() {\n  return `\n  Add to favorites\n    <svg\n            class='exercises-modal-favorite-icon'\n            width='20'\n            height='20'\n            viewBox='0 0 32 32'\n          >\n    <use href='${icons}#icon-heart'></use>\n    </svg>`;\n}\n\nfunction createRemoveFromFavoritesMarkup() {\n  return `\n  Remove from favorites\n  <svg\n            class='exercises-modal-favorite-icon'\n            width='20'\n            height='20'\n            viewBox='0 0 32 32'\n          >\n    <use href='${icons}#icon-trash'></use>\n  </svg>`;\n}\n\nfunction closeModalExercises() {\n  modalExercises.classList.add('hidden');\n  overlay.classList.add('hidden');\n  document.body.style.paddingRight = '0px';\n  document.body.style.overflow = 'auto';\n}\n\noverlay.addEventListener('click', function(event) {\n  if (event.target === overlay) {\n    closeModalExercises();\n  }\n});\n\ndocument.addEventListener('keydown', function(event) {\n  if (event.key === 'Escape' && !modalExercises.classList.contains('hidden')) {\n    closeModalExercises();\n  }\n});\n","import {api} from './api';\n\nconst refs = {\n  quoteTextEl: document.querySelector('.quote-text'),\n  quoteAuthorEl: document.querySelector('.quote-author'),\n};\nconst currentDate = new Date().toDateString();\nconst savedDate = localStorage.getItem('quoteDate');\n\ncheckDate();\n\nfunction checkDate() {\n  if (currentDate !== savedDate) {\n    fetchData();\n  } else {\n    getDataFromLS();\n  }\n}\nfunction fetchData() {\n  api.quotes().then(data => {\n    renderQuote(data.quote, data.author);\n    saveDataToLocalStorage(data.quote, data.author, currentDate);\n  });\n}\nfunction renderQuote(text, author) {\n  refs.quoteTextEl.innerHTML = `${text}`;\n  refs.quoteAuthorEl.innerHTML = `${author}`;\n}\nfunction saveDataToLocalStorage(quote, author, currentDate) {\n  localStorage.setItem('quoteText', quote);\n  localStorage.setItem('quoteAuthor', author);\n  localStorage.setItem('quoteDate', currentDate);\n}\nfunction getDataFromLS() {\n  const savedQuote = localStorage.getItem('quoteText');\n  const savedAuthor = localStorage.getItem('quoteAuthor');\n  renderQuote(savedQuote, savedAuthor);\n}\n"],"names":["FavouritesManager","exercise","favourites","exerciseId","favouritesJSON","favouritesManager","icons","PopupUI","_id","bodyPart","equipment","gifUrl","name","target","description","rating","burnedCalories","time","popularity","isFavorite","_ExerciseUI","__privateAdd","_makePaginationData","arr","cardType","featureMarkup","el","exercises","filter","imgURL","totalPages","page","perPage","paginationHTML","toNumber","e","paginationData","__privateMethod","makePaginationData_fn","maxPage","pagesArr","i","__publicField","ExerciseUI","exerciseUI","popupUI","setupMobileMenu","mobileMenu","openMenuBtn","closeMenuBtn","body","toggleMenu","isMenuOpen","disableScroll","enableScroll","closeMenu","event","buildMenu","currentPageUrl","menuItems","menu","item","listItem","link","element","BASE_URL","YourEnergyAPI","baseUrl","_baseUrl","__privateSet","query","parameters","__privateGet","response","id","data","api","idFavorite","currentExercise","modalExercises","overlay","onExercisesCardClick","exerciseID","exerciseData","markup","updateModal","openModalExercises","toggleBtn","closeModalExercises","lockPaddingValue","toggleFavorites","btnModalFavorites","createRemoveFromFavoritesMarkup","createAddToFavoritesMarkup","hideExerciseCard","showExerciseCard","card","refs","currentDate","savedDate","checkDate","fetchData","getDataFromLS","renderQuote","saveDataToLocalStorage","text","author","quote","savedQuote","savedAuthor"],"mappings":"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"}