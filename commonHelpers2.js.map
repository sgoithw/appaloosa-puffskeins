{"version":3,"file":"commonHelpers2.js","sources":["../src/js/subscribeForm.js","../src/js/mainFilters.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { api } from './api';\n//import { loader } from './loader';\n\nconst elements = {\n  subscribeForm: document.querySelector('#subscribe-form'),\n};\n\nelements.subscribeForm.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const email = elements.subscribeForm.email.value.trim();\n  const emailPattern = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n\n  if (!emailPattern.test(email)) {\n    iziToast.show({\n      position: 'center',\n      timeout: 5000,\n      color: 'red',\n      message: `Please enter valid email`,\n    });\n    return;\n  } else {\n    elements.subscribeForm.reset();\n  }\n\n  //loader.create();\n\n  api\n    .createSubscription({\n      email,\n    })\n    .then(response => {\n      const respMessage = response.message;\n      iziToast.show({\n        position: 'center',\n        color: 'white',\n        message: respMessage.replace(/([^\\w!]) /g, '$1<br>'),\n      });\n    })\n    .catch(err => {\n      iziToast.show({\n        position: 'center',\n        messageColor: 'red',\n        color: 'white',\n        message: err.message,\n      });\n    })\n    .finally(() => {\n      //loader.destroy();\n    });\n}\n","import { api } from './api';\nimport { exerciseUI, ExerciseUI } from './ui';\n\nconst exerciseFilters = {\n  muscles: '',\n  bodypart: '',\n  equipment: '',\n  keyword: '',\n  page: 1,\n  limit: 10,\n};\n\nconst filtersMap = {\n  Muscles: 'muscles',\n  'Body parts': 'bodypart',\n  Equipment: 'equipment',\n};\n\nconst exerciseContainer = document.querySelector('.exercises-cards-list');\nconst paginationContainer = document.querySelector('.exs-pagination');\nconst searchInput = document.querySelector('.filter-search');\nconst searchForm = document.querySelector('.search-form');\n\nsearchInput.addEventListener('change', onSearchChange);\nsearchForm.addEventListener('submit', onSearchSubmit);\n\nfunction onSearchChange(e) {\n  exerciseFilters.keyword = e.target.value;\n}\n\nfunction onSearchSubmit(e) {\n  e.preventDefault();\n  displayExercises();\n  searchForm.reset();\n}\n\nlet currentFilter = 'Muscles'; // Зберігаємо поточний фільтр\n\n// Функція для оновлення відображення списку вправ та пагінації\nasync function updateExerciseListAndPagination(filter, page = 1) {\n  try {\n    // Отримання даних вправ за вказаним фільтром та сторінкою\n    const data = await api.filters({ filter, page, limit: 12 });\n    const exercises = data.results;\n    searchForm.style.display = 'none';\n    // Оновлення списку вправ\n    exerciseContainer.innerHTML =\n      exerciseUI.getExerciseCategoryListHTML(exercises);\n\n    // Оновлення пагінації\n    const totalPages = data.totalPages;\n    paginationContainer.innerHTML = exerciseUI.getPaginationHTML(\n      totalPages,\n      page\n    );\n    listenClick();\n  } catch (error) {\n    console.error('Error fetching exercises:', error);\n  }\n}\n\n// Завантаження списку вправ та пагінації за замовчуванням (\"Muscles\", сторінка 1)\nupdateExerciseListAndPagination(currentFilter);\n\nfunction onExercisePageClick(event) {\n  if (event.target.tagName === 'A') {\n    const nextPage = parseInt(event.target.dataset.page);\n    if (!isNaN(nextPage)) {\n      const activeItem = document.querySelector('.exs-pagination-item.active');\n      const currentPage = parseInt(activeItem.textContent);\n      if (currentPage !== nextPage) {\n        // Оновлення списку вправ та пагінації для нової сторінки\n        updateExerciseListAndPagination(currentFilter, nextPage);\n\n        // Позначення активного елемента пагінації\n        activeItem.classList.remove('active');\n        event.target.parentElement.classList.add('active');\n      }\n    }\n  }\n}\n\n// Додаємо обробник подій для пагінації\npaginationContainer.addEventListener('click', onExercisePageClick);\n\n// Додаємо обробники подій для фільтрів\nconst filterItems = document.querySelectorAll('.exercises-item');\nfilterItems.forEach(item => {\n  item.addEventListener('click', function () {\n    filterItems.forEach(item => item.classList.remove('active'));\n    this.classList.add('active');\n    currentFilter = this.textContent; // Оновлюємо поточний фільтр\n    // Скидання сторінки на першу при зміні фільтра\n    updateExerciseListAndPagination(currentFilter);\n  });\n});\n\nfunction listenClick() {\n  console.log('listenClick func');\n  const items = document.querySelectorAll('.exs-card-item');\n  console.log(items);\n  items.forEach(item => item.addEventListener('click', handlerClickExercises));\n}\n\nfunction handlerClickExercises(e) {\n  exerciseFilters.muscles = '';\n  exerciseFilters.bodypart = '';\n  exerciseFilters.equipment = '';\n  exerciseFilters[filtersMap[currentFilter]] = e.currentTarget.dataset.name;\n  displayExercises();\n}\n\n// Функція для відмальовування списку вправ у HTML\nfunction renderExerciseList(exercises) {\n  const exerciseListElement = document.querySelector('.exercises-cards-list');\n\n  // Очистка списку перед додаванням нових елементів\n  exerciseListElement.innerHTML = '';\n\n  // Отримання типу вправ для визначення особливостей карти вправ\n  const cardType = ExerciseUI.exerciseCardType.HOME;\n\n  // Отримання HTML-представлення списку вправ з класу ExerciseUI\n  const exerciseListHTML = exerciseUI.getExerciseListHTML(\n    exercises.results,\n    cardType\n  );\n\n  // Додавання HTML-представлення вправ до списку на сторінці\n  exerciseListElement.innerHTML = exerciseListHTML;\n  paginationContainer.removeEventListener('click', onExercisePageClick);\n  const paginationLinks = document.querySelectorAll('.exs-pagination-link');\n  paginationLinks.forEach(link => link.addEventListener('click', onPageClick));\n  searchForm.style.display = 'flex';\n}\n\nfunction onPageClick(e) {\n  e.preventDefault();\n  exerciseFilters.page = e.currentTarget.dataset.page;\n  displayExercises();\n}\n\n// Отримання вправ з API та відображення їх на сторінці\nfunction displayExercises() {\n  // Отримання вправ з API\n  api\n    .exercises(exerciseFilters)\n    .then(exercises => {\n      // Відображення вправ на сторінці\n      paginationContainer.innerHTML = exerciseUI.getPaginationHTML(\n        exercises.totalPages,\n        exerciseFilters.page,\n        exerciseFilters.limit\n      );\n      renderExerciseList(exercises);\n    })\n    .catch(error => {\n      console.error('Помилка отримання вправ:', error);\n    });\n}\n"],"names":["elements","handleSubmit","event","email","iziToast","api","response","respMessage","err","exerciseFilters","filtersMap","exerciseContainer","paginationContainer","searchInput","searchForm","onSearchChange","onSearchSubmit","displayExercises","currentFilter","updateExerciseListAndPagination","filter","page","data","exercises","exerciseUI","totalPages","listenClick","error","onExercisePageClick","nextPage","activeItem","filterItems","item","items","handlerClickExercises","renderExerciseList","exerciseListElement","cardType","ExerciseUI","exerciseListHTML","link","onPageClick"],"mappings":"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"}